from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import asyncio
from bot_key import API

bot = Bot(token=API)
dp = Dispatcher(bot, storage=MemoryStorage())


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.reply('–ü—Ä–∏–≤–µ—Ç!üòä \n–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂—ë—Ç —Ç–µ–±–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞')
    await message.answer('–ù–∞–ø–∏—à–∏ —Å–≤–æ–µ –∏–º—è', reply_markup=types.ReplyKeyboardRemove())


@dp.message_handler()
async def name(message: types.Message):
    await message.answer(f'–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {message.text}!\n–í—ã–±–µ—Ä–∏ —Å–≤–æ—é –ª—é–±–∏–º—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é')


@dp.message_handler()
async def all_messages(message: types.Message):
    await message.reply('–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ')


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
